Open google chrome:
ctrl+shift+I - open console in chrome 

in console write

alert("Hello World");


let js  = 'amazing';

if(js==='amazing'){
    alert('js is fun');
}

we can do calculations in console
====================================================================================================
Javascript is a high level , object oriented , multi paradigm programming language 

programming language - helps to write code , instruct computer to do things
high level - no need to worry about memory management 
object oriented  - based on objects , for storing most kinds of data 
multi paradigm - we can use different styles of programming  [imperative and declarative]

Role of Javascript in WebDevelopment:

HTML - content [Noun]
CSS  - Presentation [Adjective]
Js -  programming language for building web applications [Verb]

There is nothing we can't do with javascript 
Dynamic effects and web applications in the browser 

React , Vue , Angular - Js libraries and framework

Node Js - backend

Ionic, react Native - mobile apps 
Electron - native desktop apps

Js has so many releases
ES5 - ES6/2015 - ES7/ES2016 - ....... ES11/2020....

Ecmascript - ES 

====================================================================================================

Linking a javascript file:

create a html file , - here index.html file 

inside head tag - we can create a script tag

<script></script> and write js code in it

    <script>
      let js = 'amazing';
      if (js === 'amazing') {
        alert('Javascript is Fun');
      }

      console.log(40 + 8 + 23 - 10);
    </script>


instead of writing js code in html file , we can write js code seperately and link it to html file 

create a script.js file , and link it to html file

<script src="./script.js"></script>

code in script.js

let js = 'amazing';
if (js === 'amazing') {
  alert('Javascript is Fun');
}

console.log(40 + 8 + 23 - 10);


====================================================================================================

Values and Variables

//declaring a variable
let firstName = 'Jonas';

console.log(firstName);

follow camel case for variable name  - firstName 

variable naming rules 

variable name cannot start with number 
let 3years = 3;

let jonas&matilda = 'JM';//cannot use other special symbols other that $ and _

let new = 100;//new is reserved keyword, cannot use 
let function = 2;//illegal, it it reserved 

its convention to not start variable name with uppercase 

let PI = 3.1415;//constants can be upper case 

variable names should be descriptive

let myFirstJob = 'Programmer';
let myCurrentJob = 'Teacher';

above is far better than below code

let job1 = 'Programmer';
let job2 = 'Teacher';

====================================================================================================

// *** Assignemnt - declare variable and print it *** //
let country = 'India';
let continent = 'Asia';
let population = 140000000;

console.log(country, continent, population);

====================================================================================================

DataTypes:

Every value in javascript is either an object or a primitive

                        VALUE 
                        /    \
                    Object   Primitive 

                let me = {              let firstName = "Apple";
                    name:"Apple"        let age = 10;
                }

There are 7 primitive DataTypes:
1.Number : Floating point numbers , used for decimals and integers | let age = 23;
2.String : Sequence of characters , used for text | let firstName = "Apple";
3.Boolean: logical type that can only be true or false , used for taking decisions | let fullAge = true;

4.Undefined: value taken by a variable that is not yet defined ('empty value') | let children;
5.Null: also means 'empty value'

6.Symbol(ES2015): value that is unique and cannot be changed[Not useful for now]
7.BigInt(ES2020): large numbers than the Number type can hold


Javascript has dynamic typing : we donot have to manually define the datatype of the value 
    stored in a variable ,instead data types are determined automatically 

value has type , not the variable

Commenting:
single line comment - //
multi line comment 
/*

*/

let marks = 100;
console.log(marks);

let firstName = 'Apple';
console.log(firstName);

let javascriptIsFun = true;
console.log(javascriptIsFun);

//to know the datatype - we use typeof

console.log(typeof true); //boolean
console.log(typeof firstName); //string
console.log(typeof marks); //number

//we can assign a new value , which is declared with let
javascriptIsFun = 'Yes!';
console.log(typeof javascriptIsFun); //dynamic typing

let isValid; //value and datatype will be undefined in both
console.log(isValid); //undefined
console.log(typeof isValid); //undefined

let year = null;
console.log(year); //null
console.log(typeof year); //object - is a bug in javascript , it will not be corrected for legacy reasons


//*** Assignment - DataTypes */
let isIsland = false;
let langauge;

console.log(typeof isIsland); //boolean
console.log(typeof langauge); //undefined

====================================================================================================
let , const and var 

let , const from ES6 
var  - is there from start


variable decalred with let , we can change its value 
let age = 30;
age = 31;


let age = 12;
age = 21;

const birthyear = 1999;
// birthyear = 2000; //script.js:78 Uncaught TypeError: Assignment to constant variable.

// const job;//this is not legal - missing initializer in const declaration

//if u r sure the variable changes , use let , otherwise mostly use const by default

var job = 'programmer'; //pretty much same as let
job = 'teacher';

// let - is block scope
// var - function scope

lastName = 'hello'; //this will not create a varibale , instead creates a property on global object, never do it
console.log(lastName);


// *** Assignment - let , const , var
const language = 'Hindi';
====================================================================================================

Operators:

Mathematical / Arthimetic Operators:

+, - , * , / ,%

const ageApple = 2037 - 2000;
const ageTom = 2037 - 2018;
console.log(ageApple, ageTom);

console.log(ageApple * 2, ageTom / 2, 2 ** 3);

const firstName = 'Apple';
const lastName = 'Shimla';
console.log(firstName + ' ' + lastName); //concatenation

//assignment operators
let x = 10 + 5; 
console.log(x);
x += 10; //x  = x+10
console.log(x);
x*=4;x = x*4 
x++;//x = x+1;

x--;

//comparision operators

console.log(ageApple > ageTom); //true
//we have > < >= <=

console.log(ageApple >= 18);

====================================================================================================
Operator Precedence:

left to right , math operators execute first than the comparision operators


====================================================================================================

coding challenge 1:

//*** BMI calculation * /
/*
    BMI = mass/height**2 = mass/(heigth*height)
*/

const marksMass = 78;
const marksHeight = 1.69;
const johnMass = 92;
const johnHeight = 1.95;

const marksBMI = marksMass / (marksHeight * marksHeight);
const johnBMI = johnMass / (johnHeight * johnHeight);

const markHigherBMI = marksBMI > johnBMI;

if (markHigherBMI) {
  console.log('marks BMI is high');
} else {
  console.log('John BMI is higher');
}

  
====================================================================================================
Strings and Template Literals:

const firstName = 'Apple';
const job = 'Teacher';
const birthYear = 2000;
const year = 2037;

const data =
  "I'm  " + firstName + ', a ' + (year - birthYear) + ' years old ' + job + '!';
console.log(data);

//template literals
console.log(`I'm ${firstName} , a ${year - birthYear} years old ${job} !`);

//using template literals we can create - Multi line strings
console.log(
  'String with \n\
multiple \n\
lines'
);

console.log(`String
multiple
lines`);