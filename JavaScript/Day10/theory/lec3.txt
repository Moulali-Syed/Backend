first class and higher order functions:
javascript treats functions as first-class citizens

this means that functions are simply values

functions are just another type of objects

//we can store functions in variables or properties
const add = (a,b)=> a+b;

const counter = {
    value:23,
    inc:function(){
        this.value++;
    }
}

//pass functions as arguments to OTHER functions
const greet = ()=>{
    console.log('Hello')
}
btnClose.addEventListener('click',greet);

return functions from functions 
call methods on functions
counter.inc.bind(someOtherObject)

=============================================================
Higher Order Functions:
A function that receives another function as an argument that returns a new function or both 

this is only possible because of first class functions 

1.function that receive another function:
const greet = () => console.log('Hey ');
btnClose.addEventListener('click',greet); //addEventListener is HOF 
because it receives another function as a argument 

2.function that returns new function:

function count(){
    let counter = 0;
    return function(){
        counter++;
    }
}

//count() - is an higher order function