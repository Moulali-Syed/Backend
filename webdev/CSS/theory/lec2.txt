parallax effect
grid view

-----------
CSS Gradients:
linear , radial , conic Gradients
background-image: linear-gradient(direction,color-stop1 , color-stop2,..);

.box {
        border: 1px solid black;
        height: 200px;
        width: 200px;
        background-image: linear-gradient(red, blue); /*top down by default*/
        background-image: linear-gradient(to right, red, blue);
        background-image: linear-gradient(to left, red, blue);
        background-image: linear-gradient(to bottom, red, blue);
        background-image: linear-gradient(to top, red, blue);

        background-image: radial-gradient(red, blue, orange);
        background-image: radial-gradient(
          circle,
          red,
          blue,
          orange
        ); /* we can define shape */
        background-image: radial-gradient(yellow 5%, orange 10%, red 50%);

        
      }

=========================================================================
Shadow effects:
text-shadow 
box-shadow 

text-shadow:
this applies shadow to text 
we can add horizontal/vertical shadows
color can be added , blur can be added 
multiple shadows on 1 text can be added 
how can we add borders using shadows

  p {
        /* horizontal vertical blur color */
        text-shadow: 3px 3px 3px red;
        /* we can add multiple shadows */
        text-shadow: 3px 3px 3px red, 5px 5px 6px green;
      }


box-shadow:
     .box {
        background-color: aqua;
        width: 200px;
        height: 200px;
        /* horizontal , vertical blur color*/
        box-shadow: 10px 10px 10px green;
        /* multiple shadows */
        box-shadow: 10px 10px 10px green, 10px 10px 10px brown;
        /* we can give negative x and y values  */
      }

      /* offset-x | offset-y | blur-radius | spread-radius | color */
box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);



=========================================================================
CSS Dimension properties: 
width 
height
min-height
max-height
min-width
max-width

max-height, max-width - is specified then only to specified heigth and width it will can be in the box
we can set --> overflow: scroll;
.box{
    max-height:100px;
    border:1px solid black;
    overflow: scroll;
}


min-height and min-width:
div{
    min-height:100px;
}

this means according to content the size will get increased


=========================================================================
overflow property:

overflow: visible;
overflow:hidden;
overflow:scroll;
overflow:auto;

we also have overflow-x and overflow-y
=========================================================================
css position property:

static - default
relative - relative to normal position - based on top, left,right , bottom
fixed
absolute
sticky 

=========================================================================
Excercise:
1.position text in all corners && center of an image - demo3.html
=========================================================================

Transforms: demo4.html

transform: translate(100px,200px);
transform:tarnslateX(100px);
transform:translateY(200px);
transform:rotate(45deg);
transform:scale(1.1,1);
transform:scaleX(2);
transform:scaleY(1);
transform:skew(20deg);
=========================================================================

css position property:demo5.html

static - the same way we write in html will be present in the document (default )
position: static;


relative:

position:relative;
top:10px;
bootom:200px;
left:130px;
right:200px; 

when we say relative - it is relative to its normal position 


fixed:
position:fixed ; 
an element with position fixed is relative to the viewport , which means it always
stays in the same place even if page is scrolled ,the top, right , bottom , left 
properties are used to position the element 


absolute:
position:absolute;
an element with position absolute is positioned relative to nearest positioned ancestor 
instead of positioned relative to viewport , like fixed

however if an absolute positioned element has no positioned ancestors it uses the document 
body and moves along with page scrolling 
Note: Absolute positioned elements are removed from normal flow and can overlap elements 


sticky:
this toggles between relative and fixed 
an element with position:sticky is positioned based on the users scroll position
A sticky element toggles between relative and fixed , depending on scroll position 
it is positioned relative until a given offset position is met in the viewport 
then it sticks in place(position:fixed)

=========================================================================
3D Transforms:

transform: perspective(15px) translateZ(-10px);//we need perspective on

transform: perspective(350px) scaleZ(6) rotateX(45deg);

transform: rotateZ(-10px);
=========================================================================


